@model DotNetCoreBoilerplate.Identity.ViewModels.RoleViewModel
@{
    ViewData["Title"] = "Edit Role";
    var controllers = (IEnumerable<DotNetCoreBoilerplate.Identity.ViewModels.MvcControllerInfo>)ViewData["Controllers"];
}

<link href="~/Tree-Generator-jQuery-Bonsai/jquery.bonsai.css" rel="stylesheet" />
<div class="panel-primary">
    <div class="panel-heading">
        <h4 class="panel-title">
            Edit Role
        </h4>
    </div>
</div>
<form asp-action="Edit" class="form-horizontal">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <table class="table table-bordered table-striped panel">
        <tr>
            <td>
                <label asp-for="Name" class="control-label"></label>
            </td>
            <td>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </td>
        </tr>
        <tr>
            <td colspan="2" class="text-center bg-danger">
                <label class="white"> Access List </label>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <ol id="tree">
                    @foreach (var controller in controllers)
                    {
                        var selectedController = Model?.MvcControllerInfoCont?.SingleOrDefault(c => c.Id == controller.Name);
                        string name;
                        {
                            name = controller.DisplayName ?? controller.Name;
                        }
                        <li class="controller" data-value="@controller.Name">
                            <input type="hidden" class="area" value="@controller.AreaName" />
                            @name
                            @if (controller.Actions.Any())
                            {
                                <ul>
                                    @foreach (var action in controller.Actions)
                                    {
                                        {
                                            name = action.DisplayName ?? action.Name; 
                                            }
                                        <li data-value="@action.Name" class="font-weight-100"
                                            @if (selectedController != null && selectedController.Actions.Any(a => a.Name == action.Name)) { <text> data-checked='1' </text> }>
                                            @name 
                                            @if (action.RouteAddress!= null)
                                            {
                                                                <span>&nbsp;&nbsp; Client App Route = @action.RouteAddress</span>
                                            }
                                        </li>
                                    }
                                </ul>
                            }
                        </li>
                    }
                </ol>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="submit" class="btn-sm btn-success btn-sm btn-round waves-effect waves-classic" value="Save" style="margin:10px;" />
            </td>
        </tr>
    </table>
</form>

<div class="site-action" data-plugin="actionBtn">
    <a asp-action="Index" data-toggle="tooltip" data-original-title="Back" class="site-action-toggle btn-raised btn btn-primary btn-sm btn-round btn-floating">
        <i class="icon md-minus animation-scale-up" aria-hidden="true"></i>
    </a>
</div>
<script src="~/assets/js/core/jquery.min.js"></script>
<script src="~/Tree-Generator-jQuery-Bonsai/jquery.qubit.js"></script>
<script src="~/Tree-Generator-jQuery-Bonsai/jquery.bonsai.js"></script>

<script>

    $('#tree').bonsai({
        expandAll: true,
        checkboxes: true, // depends on jquery.qubit plugin
        createInputs: 'checkbox' // takes values from data-name and data-value, and data-name is inherited
    });

    $('form').submit(function () {
        var i = 0, j = 0;
        $('.controller > input[type="checkbox"]:checked, .controller > input[type="checkbox"]:indeterminate').each(function () {
            var controller = $(this);
            if ($(controller).prop('indeterminate')) {
                $(controller).prop("checked", true);
            }
            var controllerName = 'SelectedControllers[' + i + ']';
            $(controller).prop('name', controllerName + '.Name');

            var area = $(controller).next().next();
            $(area).prop('name', controllerName + '.AreaName');

            $('ul > li > input[type="checkbox"]:checked', $(controller).parent()).each(function () {
                var action = $(this);
                var actionName = controllerName + '.Actions[' + j + '].Name';
                $(action).prop('name', actionName);
                j++;
            });
            j = 0;
            i++;
        });

        return true;
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}